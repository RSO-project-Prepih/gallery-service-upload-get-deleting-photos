basePath: /v1
definitions:
  handlers.PhotoResponse:
    properties:
      data:
        type: string
      image_id:
        type: string
      image_name:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
  description: This is a service for uploading, getting and deleting photos
  title: Gallery Service API
  version: "1.0"
paths:
  /deletephoto/{user_id}/{image_id}:
    delete:
      description: Deletes a photo for a given user and image ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Image ID
        in: path
        name: image_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete a photo
      tags:
      - photos
  /getphotos/{user_id}:
    get:
      description: Retrieves all photos for a specific user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.PhotoResponse'
            type: array
      summary: Display user photos
      tags:
      - photos
  /live:
    get:
      consumes:
      - application/json
      description: get the health checks of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get get health checks
      tags:
      - health
  /metrics:
    get:
      consumes:
      - application/json
      description: get the metrics of the service (prometheus)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get get metrics
      tags:
      - metrics
  /photometadata/{user_id}:
    get:
      description: Retrieves metadata for all photos of a specific user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get photo metadata
      tags:
      - metadata
  /ready:
    get:
      consumes:
      - application/json
      description: get the health checks of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get get health checks
      tags:
      - health
  /uploadphotos:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a photo with the given parameters
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      - description: Image Name
        in: formData
        name: image_name
        required: true
        type: string
      - description: Photo file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Upload a photo
      tags:
      - photos
swagger: "2.0"
